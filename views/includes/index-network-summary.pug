- var colClass = "col-lg-6 px-2";
if (exchangeRates || networkVolume)
	- colClass = "col-lg-4 px-2";

- var utxoCalculatingDesc = "At startup the app pulls a summary of the UTXO set. Until this summary is retrieved this data can't be displayed. Wait for the summary request to your node to return, then refresh this page.";




if (exchangeRates)
	+contentSection("Market")
		- var colCount = 3 + (networkVolume ? 1 : 0) + (goldExchangeRates ? 1 : 0);
		+summaryRow(colCount)
			+summaryItem("Exchange Rate", `Source: ${new URL(coinConfig.exchangeRateData.jsonUrl).hostname}`)
				- var formatData = utils.formatExchangedCurrency(1.0, userSettings.localCurrency);

				span.text-success
					span.me-1 #{formatData.symbol}
					| #{formatData.val}

			+summaryItem("Sats Rate")
				- var satsRateData = utils.satoshisPerUnitOfLocalCurrency(userSettings.localCurrency);
				span #{satsRateData.amt}
					small  #{satsRateData.unit}

			+summaryItem("Market Cap")
				- var supply = utils.estimatedSupply(getblockchaininfo.blocks);
				- var mcapData = utils.formatLargeNumber(parseFloat(supply) * global.exchangeRates[userSettings.localCurrency], 3);

				span.me-1 #{global.currencyTypes[userSettings.localCurrency].symbol}
				
				span #{mcapData[0]}
				if (mcapData[1].textDesc)
					span.ms-1 #{mcapData[1].textDesc}
				else
					span  x 10
					sup #{mcapData[1].exponent}

				// ["154.9",{"val":1000000000,"name":"giga","abbreviation":"G","exponent":"9"}]

			if (global.goldExchangeRates && global.goldExchangeRates["usd"] && global.exchangeRates && global.exchangeRates["usd"])
				// usd is the only bridge for our data sources
				+summaryItem("Gold Rate", `Source: ${new URL(coinConfig.goldExchangeRateData.jsonUrl).hostname}`)
					- var formatData = utils.formatExchangedCurrency(1.0, "au");

					span.text-warning #{formatData.val}
					small.ms-1.text-muted #{formatData.unit}

			if (networkVolume)
				+summaryItem("24hr Volume", `Total output of all transactions over the last 24hrs (blocks: [#${networkVolume.d1.endBlock.toLocaleString()} - #${networkVolume.d1.startBlock.toLocaleString()}]).`)
					- var currencyValue = parseInt(networkVolume.d1.amt);
					- var currencyValueDecimals = 0;

					if (userSettings.displayCurrency == "btc")
						+valueDisplaySpecial(networkVolume.d1.amt, 0)

					else
						+valueDisplay(networkVolume.d1.amt)

					

.clearfix
	.float-start
		+sectionTitle("Network Summary")
	.float-end
		if (userSettings.homepageShowTechDetails == "true")
			a.me-2(href="./changeSetting?name=homepageShowTechDetails&value=false", title="Hide technical network details", data-bs-toggle="tooltip", data-bs-placement="bottom")
				i.fas.fa-server.text-muted

		else
			a.me-2(href="./changeSetting?name=homepageShowTechDetails&value=true", title="Show technical network details", data-bs-toggle="tooltip", data-bs-placement="bottom")
				i.fas.fa-server.text-muted

+contentSection
	+summaryRow(1 + (hashrate7d ? 1 : 0) + (chainTxStats && chainTxStats[7 * targetBlocksPerDay] ? 1 : 0) + (difficultyAdjustmentData ? 1 : 0))
		if (hashrate7d)
			+summaryItem("7d Hashrate", "The average hashrate of the global mining network over the last 7 days. A comparison to the 30-day average is included to help gauge the rate of change.")
				- var hashrate7dayData = utils.formatLargeNumber(hashrate7d, 1);

				span.me-1 #{hashrate7dayData[0]}
				small.border-dotted.me-2(title=`${hashrate7dayData[1].abbreviation}H = ${hashrate7dayData[1].name}-hash (x10^${hashrate7dayData[1].exponent})` data-bs-toggle='tooltip') #{hashrate7dayData[1].abbreviation}H/s

				if (hashrate30d)
					- var ratio = hashrate7d / hashrate30d;
						
					small
						| (
						span.border-dotted(title='7d hashrate vs 30d hashrate.' data-bs-toggle='tooltip')
							if (ratio > 1)
								- var ratioPercent = new Decimal(ratio).times(100).minus(100);
								span.text-success +#{ratioPercent.toDP(1)}%

							else
								- var ratioPercent = new Decimal(100).minus(new Decimal(ratio).times(100));
								span.text-danger -#{ratioPercent.toDP(1)}%

						| )

		if (chainTxStats && chainTxStats[7 * targetBlocksPerDay])
			+summaryItem("7d Transactions", "The total number of transactions that have been confirmed in the blockchain over the last 7 days.")
				| #{chainTxStats[7 * targetBlocksPerDay].window_tx_count.toLocaleString()}

		if (difficultyAdjustmentData)
			- var desc = `Estimate for the difficulty adjustment that will occur in ${difficultyAdjustmentData.blocksLeft.toLocaleString()} block${difficultyAdjustmentData.blocksLeft == 1 ? "" : "s"} (${difficultyAdjustmentData.timeLeftStr}). This is calculated using the average block time during the current difficulty epoch (currently, the last ${difficultyAdjustmentData.calculationBlockCount.toLocaleString()} block${difficultyAdjustmentData.calculationBlockCount == 1 ? "" : "s"}). Note: This estimate becomes more reliable as the difficulty epoch nears its end.`;
			
			if (false)
				pre
					code.json #{JSON.stringify(difficultyAdjustmentData, null, 4)}

			+summaryItem("Difficulty Δ", difficultyAdjustmentData.estimateAvailable ? desc : null)
				if (difficultyAdjustmentData.estimateAvailable)
					span.me-2(class=(difficultyAdjustmentData.delta >= 0 ? "text-success" : "text-danger"))
						if (difficultyAdjustmentData.sign == "+")
							| +

						| #{difficultyAdjustmentData.delta.toDP(2)}
						small.ms-1 %
					small.text-muted
						| (
						span.border-dotted(title=`${difficultyAdjustmentData.blocksLeft.toLocaleString()} block(s)`, data-bs-toggle="tooltip") #{difficultyAdjustmentData.timeLeftStr}
						| )

				else
					small.border-dotted.text-muted(title="Estimate unavailable<br/>A difficulty epoch just ended. The first block of the new epoch must be mined before an estimate can be calculated.", data-bs-toggle="tooltip", data-bs-html="true") next block needed…

		if (mempoolInfo)
			+summaryItem("Mempool")
				span(class=(mempoolInfo.size > 11000) ? "text-danger" : (mempoolInfo.size > 7000 ? "text-warning" : "text-success")) #{mempoolInfo.size.toLocaleString()}
				

				

